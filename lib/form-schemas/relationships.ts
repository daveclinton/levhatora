import z from "zod";

export const relationshipSchema = z
  .object({
    contactId: z.coerce.number().positive("Contact ID is required"),
    relatedContactId: z.number().positive(),
    relationshipType: z.enum([
      "mother",
      "father",
      "grandmother",
      "grandfather",
      "grandparent",
      "parent",
      "step-parent",
      "stepmother",
      "stepfather",
      "sister",
      "brother",
      "step-sister",
      "step-brother",
      "stepson",
      "daughter",
      "son",
      "aunt",
      "uncle",
      "aunt/uncle",
      "nephew",
      "niece",
      "grandson",
      "granddaughter",
      "cousin (m)",
      "cousin (f)",
      "spouse",
      "partner",
      "wife",
      "husband",
      "former husband",
      "former wife",
      "fiance",
      "divorced co-parent",
      "separated co-parent",
      "legal guardian",
      "legal guardian partner",
      "friend",
      "neighbor",
      "relative",
      "business",
      "owner",
      "chevrusa",
      "congregant",
      "rabbi",
      "contact",
      "foundation",
      "donor",
      "fund",
      "rebbi contact",
      "rebbi contact for",
      "employee",
      "employer",
      "machatunim",
    ]),
    isActive: z.boolean().default(true),
    notes: z.string().optional(),
  })
  .refine((data) => data.contactId !== data.relatedContactId, {
    message: "Contact ID and Related Contact ID cannot be the same",
    path: ["relatedContactId"],
  });
